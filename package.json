{
  "name": "cavalry",
  "homepage": "cavalrytactics.com",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": "latest",
    "npm": "latest"
  },
  "license": "UNLICENSED",
  "config": {
    "servernamelocal": "cavalry-app",
    "servernamedev": "cavalry-app-dev",
    "servernameprod": "cavalry-app-prod",
    "serverport": "8000",
    "hosteddev": "https://cavalry-app-dev.firebaseapp.com",
    "hostedprod": "https://cavalry-app-prod.firebaseapp.com",
    "herokusitelocal": "cavalry-app.herokuapp.com",
    "herokusitedev": "cavalry-app-dev.herokuapp.com",
    "herokusiteprod": "cavalry-app-prod.herokuapp.com",
    "gitusername": "ncmd",
    "githubprojectname": "https://github.com/ncmd/cavalry.git",
    "gocommand": "go get -v github.com/elazarl/goproxy"
  },
  "scripts": {
    "UTILITIES-------------------------------------------------------------": "",
    "commit": "git add . && git commit -m \"Deploy\" && git push",
    "backup-firestore-prod": "cd utilities && npm run backup-prod",
    "backup-firestore-dev": "cd utilities && npm run backup-dev",
    "restore-firestore-prod": "cd utilities && npm run restore-prod",
    "backup-all-x": "npm-run-all --parallel backup-firestore-prod backup-firestore-dev",
    "heroku-logs": "cd server-prod && heroku logs -a cavalry-app-prod --tail",
    "go-get-all-x": "npm-run-all -s go-get-local go-get-dev go-get-prod",
    "DEPLOY-ALL------------------------------------------------------------": "",
    "deploy-all-x": "npm-run-all commit deploy-frontend-all-x deploy-backend-all-x deploy-serverless",
    "deploy-frontend-all-x": "npm-run-all -s deploy-frontend-local deploy-frontend-dev deploy-frontend-prod",
    "deploy-backend-all-x": "npm-run-all -s deploy-backend-local deploy-backend-dev deploy-backend-prod",
    "deploy-local-all-x": "concurrently \"npm run deploy-frontend-local\" \"npm run deploy-backend-local\"",
    "deploy-dev-all-x": "concurrently \"npm run deploy-frontend-dev\" \"npm run deploy-backend-dev\"",
    "deploy-prod-all-x": "concurrently \"npm run deploy-frontend-prod\" \"npm run deploy-backend-prod\"",
    "LOCAL-----------------------------------------------------------------": "",
    "go-get-local": "cross-var \"cd server & $npm_package_config_gocommand & cd ..\"",
    "local": "npm-run-all --parallel local-frontend local-backend",
    "local-frontend": "npm run start-local --prefix client",
    "local-backend": "cd server & set APP_ENV=local & go run .",
    "local-backend-exe": "cd server & go build -o server.exe & server.exe",
    "deploy-frontend-local": "cross-var \"cd client && yarn build && firebase use $npm_package_config_servernamelocal && firebase deploy\"",
    "deploy-backend-local": "cross-var \"cd server & godep save ./... & heroku git:remote -a $npm_package_config_servernamelocal & heroku config:set APP_ENV=local & git add . & git commit -m \"Deploy\" & git push heroku master & heroku logs -a $npm_package_config_servernamelocal --tail\"",
    "heroku-backend-refresh-local": "cross-var \"cd server & heroku git:remote -a cavalry-app & heroku apps:destroy --app $npm_package_config_servernamelocal --confirm $npm_package_config_servernamelocal & git init & git add . & heroku create $npm_package_config_servernamelocal & cd ..\"",
    "DEVELOPMENT-----------------------------------------------------------": "",
    "go-get-dev": "cross-var \"cd server-dev & $npm_package_config_gocommand & cd ..\"",
    "deploy-frontend-dev": "cross-var \"cd client && yarn build && firebase use $npm_package_config_servernamedev && firebase deploy\"",
    "deploy-backend-dev": "cross-var \"cd server-dev && godep save ./... & heroku git:remote -a $npm_package_config_servernamedev & heroku config:set APP_ENV=dev & git add . & git commit -m \"Deploy\" & git push heroku master & heroku logs -a $npm_package_config_servernamedev --tail\"",
    "heroku-backend-refresh-dev": "cross-var \"cd server-dev & heroku git:remote -a cavalry-app-dev & heroku apps:destroy --app $npm_package_config_servernamedev --confirm $npm_package_config_servernamedev & git init & git add . & heroku create $npm_package_config_servernamedev & cd ..\"",
    "PRODUCTION------------------------------------------------------------": "",
    "go-get-prod": "cross-var \"cd server-prod & $npm_package_config_gocommand & cd ..\"",
    "deploy-frontend-prod": "cross-var \"cd client && yarn build && firebase use $npm_package_config_servernameprod && firebase deploy\"",
    "echo-this":"cross-var \"echo \"GODEP SAVE\" \"",
    "deploy-backend-test":"npm-run-all -s deploy-backend-prod-1 deploy-backend-prod-2 deploy-backend-prod-3 deploy-backend-prod-4 deploy-backend-prod-5",
    "deploy-backend-prod-1": "cd server-prod & echo \"godep save ./...\" & godep save ./...",
    "deploy-backend-prod-2": "cross-var \"echo 'heroku git:remote -a $npm_package_config_servernameprod' & heroku git:remote -a $npm_package_config_servernameprod\"",
    "deploy-backend-prod-3": "echo 'heroku config:set APP_ENV=prod git add . git commit -m Deploy' & heroku config:set APP_ENV=prod & git add . & git commit -m \"Deploy\"",
    "deploy-backend-prod-4": "echo 'git push heroku master' & git push heroku master",
    "deploy-backend-prod-5": "cross-var \"echo 'heroku logs -a $npm_package_config_servernameprod' & heroku logs -a $npm_package_config_servernameprod --tail\"",
    "heroku-backend-refresh-prod": "cross-var \"cd server-prod & heroku git:remote -a cavalry-app-prod & heroku apps:destroy --app $npm_package_config_servernameprod --confirm $npm_package_config_servernameprod & git init & git add . & heroku create $npm_package_config_servernameprod & cd ..\"",
    "SERVERLESS------------------------------------------------------------": "",
    "deploy-serverless": "cd serverless/functions/ && npm run setup && firebase deploy --only functions --debug && cd .."
  },
  "dependencies": {},
  "devDependencies": {
    "npm-run-all": "^4.1.3"
  }
}
